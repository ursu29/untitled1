/**
 * DO NOT EDIT THIS FILE
 * This file was automatically generated from GraphQL queries and should not be edited.
 * Please change queries in *.graphql file and run codegen script if necessary.
 */
import * as Types from '../types/graphql'

import { gql } from '@apollo/client'
import * as Apollo from '@apollo/client'
const defaultOptions = {}
export type SharedFileFragmentFragment = { __typename?: 'SharedFile' } & Pick<
  Types.SharedFile,
  'id' | 'url' | 'fileName' | 'createdAt' | 'size' | 'type'
> & {
    createdBy?: Types.Maybe<
      { __typename?: 'Employee' } & Pick<Types.Employee, 'id' | 'name' | 'email'>
    >
    skills?: Types.Maybe<Array<{ __typename?: 'Skill' } & Pick<Types.Skill, 'id' | 'name'>>>
  }

export type SharedFilesQueryVariables = Types.Exact<{
  input?: Types.Maybe<Types.SharedFilesInput>
}>

export type SharedFilesQuery = { __typename?: 'Query' } & {
  sharedFiles?: Types.Maybe<Array<{ __typename?: 'SharedFile' } & SharedFileFragmentFragment>>
}

export const SharedFileFragmentFragmentDoc = gql`
  fragment SharedFileFragment on SharedFile {
    id
    url
    fileName
    createdAt
    createdBy {
      id
      name
      email
    }
    size
    type
    id
    skills {
      id
      name
    }
  }
`
export const SharedFilesDocument = gql`
  query sharedFiles($input: SharedFilesInput) {
    sharedFiles(input: $input) {
      ...SharedFileFragment
    }
  }
  ${SharedFileFragmentFragmentDoc}
`

/**
 * __useSharedFilesQuery__
 *
 * To run a query within a React component, call `useSharedFilesQuery` and pass it any options that fit your needs.
 * When your component renders, `useSharedFilesQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useSharedFilesQuery({
 *   variables: {
 *      input: // value for 'input'
 *   },
 * });
 */
export function useSharedFilesQuery(
  baseOptions?: Apollo.QueryHookOptions<SharedFilesQuery, SharedFilesQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions }
  return Apollo.useQuery<SharedFilesQuery, SharedFilesQueryVariables>(SharedFilesDocument, options)
}
export function useSharedFilesLazyQuery(
  baseOptions?: Apollo.LazyQueryHookOptions<SharedFilesQuery, SharedFilesQueryVariables>,
) {
  const options = { ...defaultOptions, ...baseOptions }
  return Apollo.useLazyQuery<SharedFilesQuery, SharedFilesQueryVariables>(
    SharedFilesDocument,
    options,
  )
}
export type SharedFilesQueryHookResult = ReturnType<typeof useSharedFilesQuery>
export type SharedFilesLazyQueryHookResult = ReturnType<typeof useSharedFilesLazyQuery>
export type SharedFilesQueryResult = Apollo.QueryResult<SharedFilesQuery, SharedFilesQueryVariables>
