/**
 * DO NOT EDIT THIS FILE
 * This file was automatically generated from GraphQL Schema and should not be edited.
 */
export type Maybe<T> = T | null
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] }
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> }
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> }
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string
  String: string
  Boolean: boolean
  Int: number
  Float: number
  /** The `Upload` scalar type represents a file upload. */
  Upload: any
}

export enum AllowedGroups {
  General = 'GENERAL',
  GeneralExcMe = 'GENERAL_EXC_ME',
  Me = 'ME',
  TechPortal = 'TECH_PORTAL',
  HrRu = 'HR_RU',
  WikiEditors = 'WIKI_EDITORS',
  HrEditors = 'HR_EDITORS',
  HrAdmins = 'HR_ADMINS',
  Reviewers = 'REVIEWERS',
  DevelopmentPlanReviewers = 'DEVELOPMENT_PLAN_REVIEWERS',
  MatricesReviewers = 'MATRICES_REVIEWERS',
  Feedback = 'FEEDBACK',
  WorkspacePlanner = 'WORKSPACE_PLANNER',
  SysAdmins = 'SYS_ADMINS',
  SuperUser = 'SUPER_USER',
}

export type Access = {
  __typename?: 'Access'
  read?: Maybe<Scalars['Boolean']>
  write?: Maybe<Scalars['Boolean']>
}

export type UpdateAccessGroupInput = {
  name?: Maybe<Scalars['String']>
  members?: Maybe<Array<Maybe<Scalars['String']>>>
}

export type ArchiveDp = {
  __typename?: 'ArchiveDP'
  compressedData?: Maybe<DevelopmentPlan>
}

export type ArchivedDpVersion = {
  __typename?: 'ArchivedDPVersion'
  id: Scalars['ID']
  createdAt: Scalars['String']
}

export type GetArchivedDpInput = {
  id: Scalars['ID']
}

export type ArchiveDpInput = {
  employee: Scalars['ID']
}

export type ArchiveSef = {
  __typename?: 'ArchiveSEF'
  compressedData: Scalars['String']
}

export type ArchivedSefVersion = {
  __typename?: 'ArchivedSEFVersion'
  id: Scalars['ID']
  createdAt: Scalars['String']
}

export type GetArchivedSefInput = {
  id: Scalars['ID']
}

export type ArchiveSefInput = {
  employee: Scalars['ID']
}

export type ArchiveMatrix = {
  __typename?: 'ArchiveMatrix'
  matrixId: Scalars['ID']
  compressedData: Scalars['String']
}

export type ArchivedMatrixVersion = {
  __typename?: 'ArchivedMatrixVersion'
  id: Scalars['ID']
  createdAt: Scalars['String']
}

export type GetArchivedMatrixInput = {
  id: Scalars['ID']
}

export type ArchiveMatrixInput = {
  employee: Scalars['ID']
  matrixId: Scalars['ID']
  employeeMatrixId?: Maybe<Scalars['ID']>
}

export type Bookmark = {
  __typename?: 'Bookmark'
  id: Scalars['ID']
  title: Scalars['String']
  link: Scalars['String']
  employee: Employee
  skills?: Maybe<Array<Skill>>
  likes?: Maybe<Array<Maybe<Bookmarklike>>>
  access?: Maybe<Access>
  createdAt?: Maybe<Scalars['String']>
  likedByMe?: Maybe<Scalars['Boolean']>
}

export type Bookmarklike = {
  __typename?: 'Bookmarklike'
  id: Scalars['ID']
  employee: Employee
  bookmark?: Maybe<Bookmark>
}

export type BookmarksInput = {
  employee?: Maybe<Scalars['String']>
  skills?: Maybe<Array<Scalars['ID']>>
}

export type CreateBookmarkInput = {
  title?: Maybe<Scalars['String']>
  link?: Maybe<Scalars['String']>
  skills?: Maybe<Array<Maybe<Scalars['ID']>>>
}

export type UpdateBookmarkInput = {
  id: Scalars['ID']
  title: Scalars['String']
  link: Scalars['String']
  skills?: Maybe<Array<Maybe<Scalars['ID']>>>
}

export type DeleteBookmarkInput = {
  id?: Maybe<Scalars['ID']>
}

export type ToggleBookmarklikeInput = {
  bookmark?: Maybe<Scalars['ID']>
}

export type DevToolsGitInfo = {
  __typename?: 'DevToolsGitInfo'
  repoName?: Maybe<Scalars['String']>
  branchName?: Maybe<Scalars['String']>
  commitId?: Maybe<Scalars['String']>
  commitMsg?: Maybe<Scalars['String']>
}

export type CurriculumVitae = {
  __typename?: 'CurriculumVitae'
  id: Scalars['ID']
  employee: Employee
  summary?: Maybe<Scalars['String']>
  languages?: Maybe<Scalars['String']>
  vitaes?: Maybe<Array<Vitae>>
  certificates?: Maybe<Array<Certificate>>
  education?: Maybe<Array<Education>>
}

export type Vitae = {
  __typename?: 'Vitae'
  id: Scalars['ID']
  company?: Maybe<Scalars['String']>
  dateStart?: Maybe<Scalars['String']>
  dateEnd?: Maybe<Scalars['String']>
  project?: Maybe<Scalars['String']>
  position?: Maybe<Scalars['String']>
  responsibilities?: Maybe<Scalars['String']>
  level?: Maybe<Scalars['String']>
}

export type Certificate = {
  __typename?: 'Certificate'
  id: Scalars['ID']
  name?: Maybe<Scalars['String']>
  date?: Maybe<Scalars['String']>
  expirationDate?: Maybe<Scalars['String']>
  link?: Maybe<Scalars['String']>
}

export type Education = {
  __typename?: 'Education'
  id: Scalars['ID']
  name?: Maybe<Scalars['String']>
  speciality?: Maybe<Scalars['String']>
  degree?: Maybe<Scalars['String']>
  dateStart?: Maybe<Scalars['String']>
  dateEnd?: Maybe<Scalars['String']>
}

export type UpdateCurriculumVitaeInput = {
  id?: Maybe<Scalars['ID']>
  summary?: Maybe<Scalars['String']>
  languages?: Maybe<Scalars['String']>
  employee: Scalars['ID']
  vitaes?: Maybe<Array<VitaeInput>>
  certificates?: Maybe<Array<CertificateInput>>
  education?: Maybe<Array<EducationInput>>
}

export type VitaeInput = {
  id?: Maybe<Scalars['ID']>
  company?: Maybe<Scalars['String']>
  dateStart?: Maybe<Scalars['String']>
  dateEnd?: Maybe<Scalars['String']>
  project?: Maybe<Scalars['String']>
  position?: Maybe<Scalars['String']>
  responsibilities?: Maybe<Scalars['String']>
  level?: Maybe<Scalars['String']>
}

export type CertificateInput = {
  id?: Maybe<Scalars['ID']>
  name?: Maybe<Scalars['String']>
  date?: Maybe<Scalars['String']>
  expirationDate?: Maybe<Scalars['String']>
  link?: Maybe<Scalars['String']>
}

export type EducationInput = {
  id?: Maybe<Scalars['ID']>
  name?: Maybe<Scalars['String']>
  speciality?: Maybe<Scalars['String']>
  degree?: Maybe<Scalars['String']>
  dateStart?: Maybe<Scalars['String']>
  dateEnd?: Maybe<Scalars['String']>
}

export type DevelopmentRoles = {
  __typename?: 'DevelopmentRoles'
  webDeveloper?: Maybe<Scalars['Boolean']>
  actuarialBusinessAnalyst?: Maybe<Scalars['Boolean']>
  agileCoach?: Maybe<Scalars['Boolean']>
  automationQA?: Maybe<Scalars['Boolean']>
  devOps?: Maybe<Scalars['Boolean']>
  dotnetDeveloper?: Maybe<Scalars['Boolean']>
  infrastructureArchitect?: Maybe<Scalars['Boolean']>
  javaDeveloper?: Maybe<Scalars['Boolean']>
  manualQA?: Maybe<Scalars['Boolean']>
  mathematician?: Maybe<Scalars['Boolean']>
  scrumMaster?: Maybe<Scalars['Boolean']>
  solutionArchitect?: Maybe<Scalars['Boolean']>
  teamLead?: Maybe<Scalars['Boolean']>
  uxExpert?: Maybe<Scalars['Boolean']>
  productOwner?: Maybe<Scalars['Boolean']>
  dataAnalyst?: Maybe<Scalars['Boolean']>
}

export type GuildContribution = {
  __typename?: 'GuildContribution'
  internalProject?: Maybe<Scalars['Boolean']>
  education?: Maybe<Scalars['Boolean']>
  noContribution?: Maybe<Scalars['Boolean']>
  startup?: Maybe<Scalars['Boolean']>
  custom?: Maybe<Scalars['String']>
}

export type DevelopmentGoal = {
  __typename?: 'DevelopmentGoal'
  id?: Maybe<Scalars['ID']>
  description?: Maybe<Scalars['String']>
  successCriteria?: Maybe<Scalars['String']>
  isAchieved?: Maybe<Scalars['Boolean']>
  comment?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['String']>
  updatedAt?: Maybe<Scalars['String']>
}

export type DevelopmentPlansInput = {
  employee?: Maybe<Scalars['ID']>
}

export type DevelopmentGoalInput = {
  id?: Maybe<Scalars['ID']>
  description?: Maybe<Scalars['String']>
  successCriteria?: Maybe<Scalars['String']>
  isAchieved?: Maybe<Scalars['Boolean']>
  comment?: Maybe<Scalars['String']>
}

export type DevelopmentRolesInput = {
  webDeveloper?: Maybe<Scalars['Boolean']>
  actuarialBusinessAnalyst?: Maybe<Scalars['Boolean']>
  agileCoach?: Maybe<Scalars['Boolean']>
  agileManager?: Maybe<Scalars['Boolean']>
  automationQA?: Maybe<Scalars['Boolean']>
  devOps?: Maybe<Scalars['Boolean']>
  dotnetDeveloper?: Maybe<Scalars['Boolean']>
  infrastructureArchitect?: Maybe<Scalars['Boolean']>
  javaDeveloper?: Maybe<Scalars['Boolean']>
  manualQA?: Maybe<Scalars['Boolean']>
  mathematician?: Maybe<Scalars['Boolean']>
  scrumMaster?: Maybe<Scalars['Boolean']>
  solutionArchitect?: Maybe<Scalars['Boolean']>
  teamLead?: Maybe<Scalars['Boolean']>
  uxExpert?: Maybe<Scalars['Boolean']>
  productOwner?: Maybe<Scalars['Boolean']>
  dataAnalyst?: Maybe<Scalars['Boolean']>
}

export type GuildContributionInput = {
  internalProject?: Maybe<Scalars['Boolean']>
  education?: Maybe<Scalars['Boolean']>
  noContribution?: Maybe<Scalars['Boolean']>
  startup?: Maybe<Scalars['Boolean']>
  custom?: Maybe<Scalars['String']>
}

export type UpdateDevelopmentPlanInput = {
  id: Scalars['ID']
  createdAt?: Maybe<Scalars['String']>
  updatedAt?: Maybe<Scalars['String']>
  lastUpdatedAt?: Maybe<Scalars['String']>
  developmentRoles?: Maybe<DevelopmentRolesInput>
  guildContribution?: Maybe<GuildContributionInput>
  previousGoals?: Maybe<Array<Maybe<DevelopmentGoalInput>>>
  actualGoals?: Maybe<Array<Maybe<DevelopmentGoalInput>>>
  amountOfTime?: Maybe<Scalars['String']>
  longTermGoals?: Maybe<Scalars['String']>
  lookBackNegative?: Maybe<Scalars['String']>
  lookBackPositive?: Maybe<Scalars['String']>
  lookForward?: Maybe<Scalars['String']>
  lastDiscussed?: Maybe<Scalars['String']>
}

export type DevelopmentPlan = {
  __typename?: 'DevelopmentPlan'
  id: Scalars['ID']
  createdAt?: Maybe<Scalars['String']>
  updatedAt?: Maybe<Scalars['String']>
  developmentRoles?: Maybe<DevelopmentRoles>
  guildContribution?: Maybe<GuildContribution>
  previousGoals?: Maybe<Array<Maybe<DevelopmentGoal>>>
  actualGoals?: Maybe<Array<Maybe<DevelopmentGoal>>>
  amountOfTime?: Maybe<Scalars['String']>
  longTermGoals?: Maybe<Scalars['String']>
  lookBackNegative?: Maybe<Scalars['String']>
  lookBackPositive?: Maybe<Scalars['String']>
  lookForward?: Maybe<Scalars['String']>
  employee?: Maybe<Employee>
  lastDiscussed?: Maybe<Scalars['String']>
}

export type Devrel = {
  __typename?: 'Devrel'
  id: Scalars['ID']
  type: Scalars['String']
  title?: Maybe<Scalars['String']>
  link?: Maybe<Scalars['String']>
  resource?: Maybe<Scalars['String']>
  dateStart?: Maybe<Scalars['String']>
  dateEnd?: Maybe<Scalars['String']>
  employee?: Maybe<Employee>
  isCompleted?: Maybe<Scalars['Boolean']>
}

export type CreateDevrelInput = {
  type: Scalars['String']
  title?: Maybe<Scalars['String']>
  link?: Maybe<Scalars['String']>
  resource?: Maybe<Scalars['String']>
  dateStart?: Maybe<Scalars['String']>
  dateEnd?: Maybe<Scalars['String']>
}

export type UpdateDevrelInput = {
  id: Scalars['ID']
  title?: Maybe<Scalars['String']>
  link?: Maybe<Scalars['String']>
  resource?: Maybe<Scalars['String']>
  isCompleted?: Maybe<Scalars['Boolean']>
}

export type ProposeDevrelEventInput = {
  title: Scalars['String']
  link?: Maybe<Scalars['String']>
  dateStart: Scalars['String']
  dateEnd: Scalars['String']
}

export type AccessInput = {
  employeeEmail?: Maybe<Scalars['String']>
}

export type ReviewerInput = {
  employeeEmail?: Maybe<Scalars['String']>
  reviewers?: Maybe<Array<Maybe<Scalars['String']>>>
}

export type SubordinateUsersCount = {
  __typename?: 'SubordinateUsersCount'
  users?: Maybe<Scalars['Int']>
  one2oneRequests?: Maybe<Scalars['Int']>
}

export type EmployeeProject = {
  __typename?: 'EmployeeProject'
  id: Scalars['ID']
  capacity?: Maybe<Scalars['Int']>
  isExtraCapacity?: Maybe<Scalars['Boolean']>
  project?: Maybe<Project>
}

export type Employee = {
  __typename?: 'Employee'
  id: Scalars['ID']
  /** @deprecated id === strapiId */
  strapiId?: Maybe<Scalars['ID']>
  name: Scalars['String']
  firstName: Scalars['String']
  lastName: Scalars['String']
  position?: Maybe<Scalars['String']>
  /** @deprecated Field no longer supported */
  country?: Maybe<Scalars['String']>
  location?: Maybe<Location>
  phoneNumber?: Maybe<Scalars['String']>
  email: Scalars['String']
  startDate?: Maybe<Scalars['String']>
  birthday?: Maybe<Scalars['String']>
  bonuses?: Maybe<Scalars['Float']>
  projects?: Maybe<Array<Project>>
  employeeProjects?: Maybe<Array<EmployeeProject>>
  experiences?: Maybe<Array<Experience>>
  access?: Maybe<Access>
  /** @deprecated Field no longer supported */
  avatar?: Maybe<Scalars['String']>
  /** @deprecated Field no longer supported */
  manager?: Maybe<Employee>
  subordinateUsers?: Maybe<Array<Employee>>
  subordinateUsersCount?: Maybe<SubordinateUsersCount>
  agileManager?: Maybe<Employee>
  isMe?: Maybe<Scalars['Boolean']>
  status?: Maybe<Scalars['String']>
  matrices?: Maybe<Array<Matrix>>
  worksFromOffice?: Maybe<Array<Scalars['String']>>
  activeProcessExecutions?: Maybe<Array<ProcessExecution>>
  lastManagerMeeting?: Maybe<Scalars['String']>
  one2oneRequest?: Maybe<Scalars['Boolean']>
  accessEditGlobal?: Maybe<Scalars['Boolean']>
  strapiGroupsMembership?: Maybe<Array<Scalars['String']>>
  requestedOnboardingTickets?: Maybe<Array<OnboardingTicket>>
  curriculumVitae?: Maybe<CurriculumVitae>
  developmentPlanReviewers?: Maybe<Array<Employee>>
  matricesReviewers?: Maybe<Array<Employee>>
}

export type EmployeeRequestedOnboardingTicketsArgs = {
  withResponsible?: Maybe<Scalars['String']>
}

export type EmployeesInput = {
  email?: Maybe<Scalars['String']>
  id?: Maybe<Scalars['ID']>
  locations?: Maybe<Array<Maybe<Location>>>
}

export type EmployeeProjectInput = {
  id: Scalars['String']
  capacity?: Maybe<Scalars['Int']>
  isExtraCapacity?: Maybe<Scalars['Boolean']>
}

export type UpdateEmployeeInput = {
  id: Scalars['ID']
  manager?: Maybe<Scalars['ID']>
  agileManager?: Maybe<Scalars['String']>
  lastManagerMeeting?: Maybe<Scalars['String']>
  one2oneRequest?: Maybe<Scalars['Boolean']>
  employeeProjects?: Maybe<Array<EmployeeProjectInput>>
}

export type EvaluationReviewer = {
  __typename?: 'EvaluationReviewer'
  id: Scalars['ID']
  fromWho?: Maybe<Employee>
  toWhom?: Maybe<Employee>
}

export type EvaluationReviewersAccessInput = {
  toWhom?: Maybe<Scalars['ID']>
}

export type EvaluationReviewersInput = {
  toWhom?: Maybe<Scalars['ID']>
}

export type CreateEvaluationReviewerInput = {
  fromWho?: Maybe<Scalars['ID']>
  toWhom?: Maybe<Scalars['ID']>
}

export type DeleteEvaluationReviewerInput = {
  fromWho?: Maybe<Scalars['ID']>
  toWhom?: Maybe<Scalars['ID']>
}

export type EvaluationAttribute = {
  __typename?: 'EvaluationAttribute'
  id: Scalars['ID']
  title?: Maybe<Scalars['String']>
  description?: Maybe<Scalars['String']>
  group?: Maybe<Scalars['String']>
  index?: Maybe<Scalars['Int']>
}

export type Evaluation = {
  __typename?: 'Evaluation'
  id: Scalars['ID']
  fromWho?: Maybe<Employee>
  toWhom?: Maybe<Employee>
  evaluation?: Maybe<Scalars['Int']>
  comment?: Maybe<Scalars['String']>
  updatedAt?: Maybe<Scalars['String']>
  evaluationAttribute?: Maybe<EvaluationAttribute>
}

export type EvaluationComment = {
  __typename?: 'EvaluationComment'
  id: Scalars['ID']
  body?: Maybe<Scalars['String']>
  employee?: Maybe<Employee>
  evaluationAttribute?: Maybe<EvaluationAttribute>
  editable?: Maybe<Scalars['Boolean']>
}

export type EvaluationCustomFields = {
  __typename?: 'EvaluationCustomFields'
  id: Scalars['ID']
  employeeMail?: Maybe<Scalars['String']>
  lastDiscussed?: Maybe<Scalars['String']>
}

export type EvaluationsInput = {
  employee?: Maybe<Scalars['ID']>
}

export type EvaluationCommentsInput = {
  employee?: Maybe<Scalars['ID']>
}

export type CommentEvaluationInput = {
  employee?: Maybe<Scalars['ID']>
  body?: Maybe<Scalars['String']>
  evaluationAttribute?: Maybe<Scalars['ID']>
}

export type EvaluateInput = {
  toWhom?: Maybe<Scalars['ID']>
  evaluation?: Maybe<Scalars['Int']>
  comment?: Maybe<Scalars['String']>
  evaluationAttribute?: Maybe<Scalars['ID']>
}

export type EvaluationCustomFieldsInput = {
  employee: Scalars['ID']
}

export type UpdateCustomFieldsInput = {
  employee: Scalars['ID']
  lastDiscussed?: Maybe<Scalars['String']>
}

export enum Importance {
  High = 'HIGH',
  Normal = 'NORMAL',
  Low = 'LOW',
}

export type EventAttendee = {
  __typename?: 'EventAttendee'
  employee?: Maybe<Employee>
  type?: Maybe<Scalars['String']>
  status?: Maybe<Scalars['String']>
}

export type Event = {
  __typename?: 'Event'
  id: Scalars['ID']
  title: Scalars['String']
  description?: Maybe<Scalars['String']>
  link?: Maybe<Scalars['String']>
  createdBy: Employee
  start?: Maybe<Scalars['String']>
  end?: Maybe<Scalars['String']>
  importance?: Maybe<Importance>
  isAllDay?: Maybe<Scalars['Boolean']>
  isDraft?: Maybe<Scalars['Boolean']>
  isOnline?: Maybe<Scalars['Boolean']>
  isExternal?: Maybe<Scalars['Boolean']>
  city?: Maybe<Scalars['String']>
  location?: Maybe<Scalars['String']>
  skills?: Maybe<Array<Maybe<Skill>>>
  attendees?: Maybe<Array<Maybe<EventAttendee>>>
  isAttendAll?: Maybe<Scalars['Boolean']>
}

export type EventsInput = {
  start: Scalars['String']
  end: Scalars['String']
}

export type CreateEventInput = {
  title: Scalars['String']
  description?: Maybe<Scalars['String']>
  link?: Maybe<Scalars['String']>
  start: Scalars['String']
  end: Scalars['String']
  importance: Importance
  isAllDay?: Maybe<Scalars['Boolean']>
  isDraft?: Maybe<Scalars['Boolean']>
  isOnline?: Maybe<Scalars['Boolean']>
  isExternal?: Maybe<Scalars['Boolean']>
  city?: Maybe<Scalars['String']>
  location?: Maybe<Scalars['String']>
  skills?: Maybe<Array<Maybe<Scalars['ID']>>>
}

export type UpdateEventInput = {
  id: Scalars['ID']
  title?: Maybe<Scalars['String']>
  description?: Maybe<Scalars['String']>
  link?: Maybe<Scalars['String']>
  start?: Maybe<Scalars['String']>
  end?: Maybe<Scalars['String']>
  importance?: Maybe<Importance>
  isAllDay?: Maybe<Scalars['Boolean']>
  isDraft?: Maybe<Scalars['Boolean']>
  isOnline?: Maybe<Scalars['Boolean']>
  city?: Maybe<Scalars['String']>
  location?: Maybe<Scalars['String']>
}

export type CancelEventInput = {
  id: Scalars['ID']
  comment?: Maybe<Scalars['String']>
}

export type Experience = {
  __typename?: 'Experience'
  id: Scalars['ID']
  employee?: Maybe<Employee>
  level?: Maybe<Level>
  skill?: Maybe<Skill>
  updatedAt?: Maybe<Scalars['String']>
  comment?: Maybe<Scalars['String']>
}

export type ExperiencesInput = {
  employee?: Maybe<Scalars['ID']>
  skill?: Maybe<Scalars['ID']>
  noMatrixSkills?: Maybe<Scalars['Boolean']>
}

export type CreateExperienceInput = {
  skill: Scalars['ID']
  level?: Maybe<Level>
  employee?: Maybe<Scalars['ID']>
  comment?: Maybe<Scalars['String']>
}

export type UpdateExperienceInput = {
  id?: Maybe<Scalars['ID']>
  level?: Maybe<Level>
  comment?: Maybe<Scalars['String']>
}

export type UpdateExperiencesInput = {
  skills?: Maybe<Array<Maybe<Scalars['ID']>>>
  level?: Maybe<Level>
  employee: Scalars['ID']
}

export type DeleteExperienceInput = {
  id?: Maybe<Scalars['ID']>
}

export enum Feedback_About {
  Company = 'COMPANY',
  Team = 'TEAM',
  Event = 'EVENT',
  Portal = 'PORTAL',
}

export type Feedback = {
  __typename?: 'Feedback'
  id: Scalars['ID']
  about?: Maybe<Feedback_About>
  project?: Maybe<Project>
  text?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['String']>
  comments?: Maybe<Array<FeedbackComment>>
}

export type FeedbackComment = {
  __typename?: 'FeedbackComment'
  id: Scalars['ID']
  text?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['String']>
}

export type FeedbacksInput = {
  search?: Maybe<Scalars['String']>
  about?: Maybe<Feedback_About>
  project?: Maybe<Scalars['String']>
  limit?: Maybe<Scalars['Int']>
  offset?: Maybe<Scalars['Int']>
}

export type FeedbackInput = {
  about: Feedback_About
  project?: Maybe<Scalars['String']>
  text: Scalars['String']
  isPrivate?: Maybe<Scalars['Boolean']>
}

export type FeedbackReplyInput = {
  feedbackId: Scalars['ID']
  text: Scalars['String']
}

export type DeleteFeedbackInput = {
  id: Scalars['ID']
}

export type File = {
  __typename?: 'File'
  id: Scalars['ID']
  url?: Maybe<Scalars['String']>
  fileName?: Maybe<Scalars['String']>
}

export type SharedFile = {
  __typename?: 'SharedFile'
  id: Scalars['ID']
  url: Scalars['String']
  fileName: Scalars['String']
  createdAt?: Maybe<Scalars['String']>
  createdBy?: Maybe<Employee>
  updatedBy?: Maybe<Employee>
  updatedAt?: Maybe<Scalars['String']>
  size?: Maybe<Scalars['Float']>
  type?: Maybe<Scalars['String']>
  skills?: Maybe<Array<Skill>>
}

export type UpdateSharedFileInput = {
  id: Scalars['ID']
  skills?: Maybe<Array<Scalars['ID']>>
}

export type SharedFilesInput = {
  skills?: Maybe<Array<Scalars['ID']>>
}

export enum GameType {
  Snake = 'SNAKE',
}

export type GameScore = {
  __typename?: 'GameScore'
  id: Scalars['ID']
  player: Employee
  position: Scalars['Int']
  score: Scalars['Int']
  date: Scalars['String']
}

export type StartGame = {
  __typename?: 'StartGame'
  secret: Scalars['String']
}

export type LeaderboardInput = {
  game: GameType
}

export type StartGameInput = {
  game: GameType
}

export type UpdateScoreInput = {
  game: GameType
  value: Scalars['String']
}

export type Guild = {
  __typename?: 'Guild'
  id?: Maybe<Scalars['ID']>
  /** @deprecated Field no longer supported */
  azureId?: Maybe<Scalars['ID']>
  code: Scalars['String']
  /** @deprecated use code */
  azureDisplayName?: Maybe<Scalars['String']>
  leaders?: Maybe<Array<Employee>>
  title?: Maybe<Scalars['String']>
  description?: Maybe<Scalars['String']>
  shortDescription?: Maybe<Scalars['String']>
  skills?: Maybe<Array<Skill>>
  accessWrite?: Maybe<Scalars['Boolean']>
}

export type GuildInput = {
  azureDisplayName?: Maybe<Scalars['String']>
}

export type UpdateGuildInput = {
  azureDisplayName: Scalars['String']
  title?: Maybe<Scalars['String']>
  description?: Maybe<Scalars['String']>
  shortDescription?: Maybe<Scalars['String']>
  skills?: Maybe<Array<Maybe<Scalars['ID']>>>
  leaders?: Maybe<Array<Maybe<Scalars['String']>>>
}

export type Query = {
  __typename?: 'Query'
  hello?: Maybe<Scalars['String']>
  isAuthenticated?: Maybe<Scalars['Boolean']>
  getMembersOf?: Maybe<Array<Employee>>
  archivedDPVersions?: Maybe<Array<Maybe<ArchivedDpVersion>>>
  archivedDP?: Maybe<ArchiveDp>
  archivedSEFVersions?: Maybe<Array<Maybe<ArchivedSefVersion>>>
  archivedSEF?: Maybe<ArchiveSef>
  archivedMatrixVersions?: Maybe<Array<Maybe<ArchivedMatrixVersion>>>
  archivedMatrix?: Maybe<ArchiveMatrix>
  bookmarks?: Maybe<Array<Maybe<Bookmark>>>
  bookmarkByLink?: Maybe<Bookmark>
  clientDevToolsAccess?: Maybe<Scalars['Boolean']>
  clientDevToolsGitInfo?: Maybe<DevToolsGitInfo>
  curriculumVitaeAccess?: Maybe<Access>
  developmentPlans?: Maybe<DevelopmentPlan>
  devrels: Array<Devrel>
  developmentPlanLookReviewersAccess?: Maybe<Access>
  matricesLookReviewersAccess?: Maybe<Access>
  employee?: Maybe<Employee>
  employeeByEmail?: Maybe<Employee>
  employees?: Maybe<Array<Employee>>
  profile?: Maybe<Employee>
  evaluationReviewersAccess?: Maybe<Access>
  evaluationReviewers?: Maybe<Array<Maybe<EvaluationReviewer>>>
  evaluationAttributes?: Maybe<Array<Maybe<EvaluationAttribute>>>
  evaluationComments?: Maybe<Array<Maybe<EvaluationComment>>>
  evaluations?: Maybe<Array<Maybe<Evaluation>>>
  evaluationCustomFields?: Maybe<EvaluationCustomFields>
  events?: Maybe<Array<Maybe<Event>>>
  event?: Maybe<Event>
  experiences?: Maybe<Array<Maybe<Experience>>>
  feedbacks?: Maybe<Array<Feedback>>
  feedbacksAccess?: Maybe<Access>
  sharedFiles?: Maybe<Array<SharedFile>>
  gameLeaderboard: Array<GameScore>
  guild?: Maybe<Guild>
  guilds?: Maybe<Array<Maybe<Guild>>>
  levels?: Maybe<Array<Level>>
  locations?: Maybe<Array<Location>>
  matrices?: Maybe<Array<Maybe<Matrix>>>
  matricesAccess?: Maybe<Access>
  matricesCustomFields?: Maybe<MatricesCustomFields>
  officeDays?: Maybe<Array<Maybe<OfficeDay>>>
  officeAccess?: Maybe<Access>
  onboardingTickets?: Maybe<Array<Maybe<OnboardingTicket>>>
  onboardingAccess?: Maybe<Access>
  employeeOnboardingTickets?: Maybe<Array<Maybe<OnboardingTicket>>>
  createdByMeOnboardingTickets?: Maybe<Array<Maybe<OnboardingTicket>>>
  post?: Maybe<Post>
  postBySlug?: Maybe<Post>
  posts?: Maybe<Array<Maybe<Post>>>
  /** @deprecated will be moved to employee.access.posts */
  postsEditor?: Maybe<Access>
  processesAccess?: Maybe<Access>
  process?: Maybe<Process>
  processes?: Maybe<Array<Maybe<Process>>>
  processExecutionsAccess?: Maybe<Access>
  processExecution?: Maybe<ProcessExecution>
  processExecutions?: Maybe<Array<Maybe<ProcessExecution>>>
  project?: Maybe<Project>
  projectByCode?: Maybe<Project>
  projects?: Maybe<Array<Maybe<Project>>>
  skills?: Maybe<Array<Skill>>
  tags?: Maybe<Array<Maybe<Tag>>>
  vacancy?: Maybe<Vacancy>
  vacancies?: Maybe<Array<Maybe<Vacancy>>>
  wikiRootSections?: Maybe<Array<Maybe<WikiRootSection>>>
  wikiPage?: Maybe<WikiPage>
  wikiPagesPaths?: Maybe<Array<Maybe<Scalars['String']>>>
  wikiSearchText?: Maybe<Array<Maybe<FoundWikiPage>>>
  workspaceDesignAccess?: Maybe<Access>
  workspaces?: Maybe<Array<Maybe<Workspace>>>
  workspace?: Maybe<Workspace>
}

export type QueryGetMembersOfArgs = {
  group?: Maybe<Scalars['String']>
}

export type QueryArchivedDpVersionsArgs = {
  input?: Maybe<ArchiveDpInput>
}

export type QueryArchivedDpArgs = {
  input?: Maybe<GetArchivedDpInput>
}

export type QueryArchivedSefVersionsArgs = {
  input?: Maybe<ArchiveSefInput>
}

export type QueryArchivedSefArgs = {
  input?: Maybe<GetArchivedSefInput>
}

export type QueryArchivedMatrixVersionsArgs = {
  input?: Maybe<ArchiveMatrixInput>
}

export type QueryArchivedMatrixArgs = {
  input?: Maybe<GetArchivedMatrixInput>
}

export type QueryBookmarksArgs = {
  input?: Maybe<BookmarksInput>
}

export type QueryBookmarkByLinkArgs = {
  link: Scalars['String']
}

export type QueryCurriculumVitaeAccessArgs = {
  input?: Maybe<AccessInput>
}

export type QueryDevelopmentPlansArgs = {
  input: DevelopmentPlansInput
}

export type QueryDevrelsArgs = {
  type: Scalars['String']
}

export type QueryDevelopmentPlanLookReviewersAccessArgs = {
  input?: Maybe<AccessInput>
}

export type QueryMatricesLookReviewersAccessArgs = {
  input?: Maybe<AccessInput>
}

export type QueryEmployeeArgs = {
  id: Scalars['ID']
}

export type QueryEmployeeByEmailArgs = {
  email: Scalars['String']
}

export type QueryEmployeesArgs = {
  input?: Maybe<EmployeesInput>
}

export type QueryEvaluationReviewersAccessArgs = {
  input?: Maybe<EvaluationReviewersAccessInput>
}

export type QueryEvaluationReviewersArgs = {
  input?: Maybe<EvaluationReviewersInput>
}

export type QueryEvaluationCommentsArgs = {
  input?: Maybe<EvaluationCommentsInput>
}

export type QueryEvaluationsArgs = {
  input: EvaluationsInput
}

export type QueryEvaluationCustomFieldsArgs = {
  input?: Maybe<EvaluationCustomFieldsInput>
}

export type QueryEventsArgs = {
  input: EventsInput
}

export type QueryEventArgs = {
  id: Scalars['ID']
}

export type QueryExperiencesArgs = {
  input?: Maybe<ExperiencesInput>
}

export type QueryFeedbacksArgs = {
  input: FeedbacksInput
}

export type QuerySharedFilesArgs = {
  input?: Maybe<SharedFilesInput>
}

export type QueryGameLeaderboardArgs = {
  input: LeaderboardInput
}

export type QueryGuildArgs = {
  input?: Maybe<GuildInput>
}

export type QueryMatricesArgs = {
  input?: Maybe<MatricesInput>
}

export type QueryMatricesCustomFieldsArgs = {
  input?: Maybe<MatricesCustomFieldsInput>
}

export type QueryOfficeDaysArgs = {
  input?: Maybe<OfficeDaysInput>
}

export type QueryPostArgs = {
  id: Scalars['ID']
}

export type QueryPostBySlugArgs = {
  slug: Scalars['String']
}

export type QueryPostsArgs = {
  first?: Maybe<Scalars['Int']>
  after?: Maybe<Scalars['ID']>
  filter?: Maybe<PostsFilter>
}

export type QueryProcessArgs = {
  id: Scalars['ID']
}

export type QueryProcessExecutionArgs = {
  id: Scalars['ID']
}

export type QueryProcessExecutionsArgs = {
  input?: Maybe<ProcessExecutionsInput>
}

export type QueryProjectArgs = {
  id: Scalars['ID']
}

export type QueryProjectByCodeArgs = {
  code: Scalars['String']
}

export type QuerySkillsArgs = {
  input?: Maybe<SkillsInput>
}

export type QueryVacancyArgs = {
  id: Scalars['ID']
}

export type QueryVacanciesArgs = {
  input?: Maybe<VacanciesInput>
}

export type QueryWikiPageArgs = {
  input?: Maybe<WikiPageInput>
}

export type QueryWikiPagesPathsArgs = {
  rootPath?: Maybe<Scalars['String']>
}

export type QueryWikiSearchTextArgs = {
  input?: Maybe<WikiSearchTextInput>
}

export type QueryWorkspacesArgs = {
  input?: Maybe<WorkspacesInput>
}

export type QueryWorkspaceArgs = {
  id: Scalars['ID']
}

export type MutateHelloInput = {
  hello?: Maybe<Scalars['String']>
}

export type Mutation = {
  __typename?: 'Mutation'
  mutateHello?: Maybe<Scalars['String']>
  updateAccessGroup?: Maybe<Scalars['String']>
  archiveDP?: Maybe<ArchiveDp>
  archiveSEF?: Maybe<ArchiveSef>
  archiveMatrix?: Maybe<ArchiveMatrix>
  createBookmark?: Maybe<Bookmark>
  updateBookmark?: Maybe<Bookmark>
  deleteBookmark?: Maybe<Bookmark>
  toggleBookmarklike?: Maybe<Bookmarklike>
  updateCurriculumVitae?: Maybe<CurriculumVitae>
  updateDevelopmentPlan?: Maybe<DevelopmentPlan>
  createDevrel?: Maybe<Devrel>
  updateDevrel?: Maybe<Devrel>
  proposeDevrelEvent?: Maybe<Scalars['Boolean']>
  participateDevrelEvent?: Maybe<Scalars['Boolean']>
  deleteDevrel?: Maybe<Devrel>
  updateDevelopmentPlanReviewers?: Maybe<Array<Employee>>
  updateMatricesReviewers?: Maybe<Array<Employee>>
  updateEmployee?: Maybe<Employee>
  createEvaluationReviewer?: Maybe<Array<Maybe<EvaluationReviewer>>>
  deleteEvaluationReviewer?: Maybe<EvaluationReviewer>
  evaluate?: Maybe<Evaluation>
  commentEvaluation?: Maybe<EvaluationComment>
  updateCustomFields?: Maybe<EvaluationCustomFields>
  createEvent?: Maybe<Event>
  updateEvent?: Maybe<Event>
  cancelEvent?: Maybe<Scalars['ID']>
  attendEvent?: Maybe<Scalars['Boolean']>
  attendEventEveryone?: Maybe<Scalars['Boolean']>
  createExperience?: Maybe<Experience>
  updateExperience?: Maybe<Experience>
  updateExperiences?: Maybe<Array<Maybe<Experience>>>
  deleteExperience?: Maybe<Experience>
  addFeedback?: Maybe<Feedback>
  deleteFeedback?: Maybe<Feedback>
  replyFeedback?: Maybe<FeedbackComment>
  updateSharedFile?: Maybe<SharedFile>
  startGame: StartGame
  updateGameScore: GameScore
  updateGuild?: Maybe<Guild>
  attachMatrixToEmployee?: Maybe<Matrix>
  detachMatrixFromEmployee?: Maybe<Matrix>
  createMatrix?: Maybe<Matrix>
  updateMatrix?: Maybe<Matrix>
  commentMatrix?: Maybe<Matrix>
  reorderMatrixSkills?: Maybe<Scalars['ID']>
  createMatrixSkill?: Maybe<Matrix>
  deleteMatrixSkill?: Maybe<Matrix>
  createMatrixGroup?: Maybe<Matrix>
  deleteMatrixGroup?: Maybe<Matrix>
  createMatrixGrade?: Maybe<Matrix>
  deleteMatrixGrade?: Maybe<Matrix>
  updateMatricesCustomFields?: Maybe<MatricesCustomFields>
  proposeMatrixChanges?: Maybe<Scalars['Boolean']>
  createOfficeBooking?: Maybe<Scalars['Boolean']>
  cancelOfficeBooking?: Maybe<Scalars['Boolean']>
  updateOfficeDays?: Maybe<Scalars['Boolean']>
  createOnboardingTicket?: Maybe<OnboardingTicket>
  updateOnboardingTicket?: Maybe<OnboardingTicket>
  deleteOnboardingTicket?: Maybe<OnboardingTicket>
  completeOnboardingTicket?: Maybe<Scalars['ID']>
  cancelOnboardingTicket?: Maybe<Scalars['ID']>
  requestOnboardingTicket?: Maybe<Scalars['ID']>
  createPost?: Maybe<Post>
  updatePost?: Maybe<Post>
  deletePost?: Maybe<Post>
  createProcess?: Maybe<Process>
  updateProcess?: Maybe<Process>
  deleteProcess?: Maybe<Process>
  createProcessStep?: Maybe<ProcessStep>
  updateProcessStep?: Maybe<ProcessStep>
  deleteProcessStep?: Maybe<ProcessStep>
  createProcessExecution?: Maybe<ProcessExecution>
  updateProcessExecution?: Maybe<ProcessExecution>
  abortProcessExecution?: Maybe<ProcessExecution>
  toggleHoldProcessExecution?: Maybe<ProcessExecution>
  rotateEmployee?: Maybe<ProcessExecution>
  completeProcessExecutionStep?: Maybe<ProcessExecutionStep>
  commentProcessExecutionStep?: Maybe<ProcessExecutionStep>
  updateProject?: Maybe<Project>
  updateProjectSkills?: Maybe<Project>
  createSkill?: Maybe<Skill>
  updateSkill?: Maybe<Skill>
  deleteSkill?: Maybe<Skill>
  createTag?: Maybe<Tag>
  updateVacancy?: Maybe<Vacancy>
  publishVacancy?: Maybe<Vacancy>
  closeVacancy?: Maybe<Vacancy>
  rotateRequest?: Maybe<Vacancy>
  cancelRotateRequest?: Maybe<Vacancy>
  updateWikiPage?: Maybe<WikiPage>
  createWikiPage?: Maybe<WikiPage>
  removeWikiPage?: Maybe<WikiPage>
  createWorkspace?: Maybe<Workspace>
  updateWorkspace?: Maybe<Workspace>
  deleteWorkspace?: Maybe<Workspace>
  createWorkplace?: Maybe<Workplace>
  updateWorkplace?: Maybe<Workplace>
  deleteWorkplace?: Maybe<Workplace>
  createWorkplaceBooking?: Maybe<WorkplaceBooking>
  deleteWorkplaceBooking?: Maybe<WorkplaceBooking>
}

export type MutationMutateHelloArgs = {
  input?: Maybe<MutateHelloInput>
}

export type MutationUpdateAccessGroupArgs = {
  input?: Maybe<UpdateAccessGroupInput>
}

export type MutationArchiveDpArgs = {
  input?: Maybe<ArchiveDpInput>
}

export type MutationArchiveSefArgs = {
  input?: Maybe<ArchiveSefInput>
}

export type MutationArchiveMatrixArgs = {
  input?: Maybe<ArchiveMatrixInput>
}

export type MutationCreateBookmarkArgs = {
  input: CreateBookmarkInput
}

export type MutationUpdateBookmarkArgs = {
  input: UpdateBookmarkInput
}

export type MutationDeleteBookmarkArgs = {
  input: DeleteBookmarkInput
}

export type MutationToggleBookmarklikeArgs = {
  input: ToggleBookmarklikeInput
}

export type MutationUpdateCurriculumVitaeArgs = {
  input: UpdateCurriculumVitaeInput
}

export type MutationUpdateDevelopmentPlanArgs = {
  input: UpdateDevelopmentPlanInput
}

export type MutationCreateDevrelArgs = {
  input: CreateDevrelInput
}

export type MutationUpdateDevrelArgs = {
  input: UpdateDevrelInput
}

export type MutationProposeDevrelEventArgs = {
  input: ProposeDevrelEventInput
}

export type MutationParticipateDevrelEventArgs = {
  id: Scalars['ID']
}

export type MutationDeleteDevrelArgs = {
  id: Scalars['ID']
}

export type MutationUpdateDevelopmentPlanReviewersArgs = {
  input?: Maybe<ReviewerInput>
}

export type MutationUpdateMatricesReviewersArgs = {
  input?: Maybe<ReviewerInput>
}

export type MutationUpdateEmployeeArgs = {
  input: UpdateEmployeeInput
}

export type MutationCreateEvaluationReviewerArgs = {
  input?: Maybe<CreateEvaluationReviewerInput>
}

export type MutationDeleteEvaluationReviewerArgs = {
  input?: Maybe<DeleteEvaluationReviewerInput>
}

export type MutationEvaluateArgs = {
  input: EvaluateInput
}

export type MutationCommentEvaluationArgs = {
  input: CommentEvaluationInput
}

export type MutationUpdateCustomFieldsArgs = {
  input?: Maybe<UpdateCustomFieldsInput>
}

export type MutationCreateEventArgs = {
  input: CreateEventInput
}

export type MutationUpdateEventArgs = {
  input: UpdateEventInput
}

export type MutationCancelEventArgs = {
  input: CancelEventInput
}

export type MutationAttendEventArgs = {
  id: Scalars['ID']
}

export type MutationAttendEventEveryoneArgs = {
  id: Scalars['ID']
}

export type MutationCreateExperienceArgs = {
  input?: Maybe<CreateExperienceInput>
}

export type MutationUpdateExperienceArgs = {
  input?: Maybe<UpdateExperienceInput>
}

export type MutationUpdateExperiencesArgs = {
  input?: Maybe<UpdateExperiencesInput>
}

export type MutationDeleteExperienceArgs = {
  input?: Maybe<DeleteExperienceInput>
}

export type MutationAddFeedbackArgs = {
  input: FeedbackInput
}

export type MutationDeleteFeedbackArgs = {
  input: DeleteFeedbackInput
}

export type MutationReplyFeedbackArgs = {
  input: FeedbackReplyInput
}

export type MutationUpdateSharedFileArgs = {
  input: UpdateSharedFileInput
}

export type MutationStartGameArgs = {
  input: StartGameInput
}

export type MutationUpdateGameScoreArgs = {
  input: UpdateScoreInput
}

export type MutationUpdateGuildArgs = {
  input?: Maybe<UpdateGuildInput>
}

export type MutationAttachMatrixToEmployeeArgs = {
  input?: Maybe<AttachMatrixToEmployeeInput>
}

export type MutationDetachMatrixFromEmployeeArgs = {
  input?: Maybe<DetachMatrixFromEmployeeInput>
}

export type MutationCreateMatrixArgs = {
  input?: Maybe<CreateMatrixInput>
}

export type MutationUpdateMatrixArgs = {
  input?: Maybe<UpdateMatrixInput>
}

export type MutationCommentMatrixArgs = {
  input?: Maybe<CommentMatrixInput>
}

export type MutationReorderMatrixSkillsArgs = {
  input?: Maybe<ReorderMatrixSkillsInput>
}

export type MutationCreateMatrixSkillArgs = {
  input?: Maybe<CreateMatrixSkillInput>
}

export type MutationDeleteMatrixSkillArgs = {
  input?: Maybe<DeleteMatrixSkillInput>
}

export type MutationCreateMatrixGroupArgs = {
  input?: Maybe<CreateMatrixGroupInput>
}

export type MutationDeleteMatrixGroupArgs = {
  input?: Maybe<DeleteMatrixGroupInput>
}

export type MutationCreateMatrixGradeArgs = {
  input?: Maybe<CreateMatrixGradeInput>
}

export type MutationDeleteMatrixGradeArgs = {
  input?: Maybe<DeleteMatrixGradeInput>
}

export type MutationUpdateMatricesCustomFieldsArgs = {
  input?: Maybe<UpdateMatricesCustomFieldsInput>
}

export type MutationProposeMatrixChangesArgs = {
  input: ProposeMatrixChangesInput
}

export type MutationCreateOfficeBookingArgs = {
  input: CreateOfficeBookingInput
}

export type MutationCancelOfficeBookingArgs = {
  input: CancelOfficeBookingInput
}

export type MutationUpdateOfficeDaysArgs = {
  input: UpdateOfficeDaysInput
}

export type MutationCreateOnboardingTicketArgs = {
  input?: Maybe<CreateOnboardingTicketInput>
}

export type MutationUpdateOnboardingTicketArgs = {
  input?: Maybe<UpdateOnboardingTicketInput>
}

export type MutationDeleteOnboardingTicketArgs = {
  input?: Maybe<DeleteOnboardingTicketInput>
}

export type MutationCompleteOnboardingTicketArgs = {
  input?: Maybe<CompleteOnboardingTicketInput>
}

export type MutationCancelOnboardingTicketArgs = {
  input?: Maybe<CompleteOnboardingTicketInput>
}

export type MutationRequestOnboardingTicketArgs = {
  id: Scalars['ID']
}

export type MutationCreatePostArgs = {
  input?: Maybe<CreatePostInput>
}

export type MutationUpdatePostArgs = {
  input?: Maybe<UpdatePostInput>
}

export type MutationDeletePostArgs = {
  input?: Maybe<DeletePostInput>
}

export type MutationCreateProcessArgs = {
  input?: Maybe<CreateProcessInput>
}

export type MutationUpdateProcessArgs = {
  input?: Maybe<UpdateProcessInput>
}

export type MutationDeleteProcessArgs = {
  id: Scalars['ID']
}

export type MutationCreateProcessStepArgs = {
  input?: Maybe<CreateProcessStepInput>
}

export type MutationUpdateProcessStepArgs = {
  input?: Maybe<UpdateProcessStepInput>
}

export type MutationDeleteProcessStepArgs = {
  id: Scalars['ID']
}

export type MutationCreateProcessExecutionArgs = {
  input?: Maybe<CreateProcessExecutionInput>
}

export type MutationUpdateProcessExecutionArgs = {
  input?: Maybe<UpdateProcessExecutionInput>
}

export type MutationAbortProcessExecutionArgs = {
  input: AbortProcessExecutionInput
}

export type MutationToggleHoldProcessExecutionArgs = {
  input: AbortProcessExecutionInput
}

export type MutationRotateEmployeeArgs = {
  input: RotateEmployeeInput
}

export type MutationCompleteProcessExecutionStepArgs = {
  input: CompleteProcessExecutionStepInput
}

export type MutationCommentProcessExecutionStepArgs = {
  input: CommentProcessExecutionStepInput
}

export type MutationUpdateProjectArgs = {
  input: UpdateProjectInput
}

export type MutationUpdateProjectSkillsArgs = {
  input: UpdateProjectSkillsInput
}

export type MutationCreateSkillArgs = {
  input?: Maybe<CreateSkillInput>
}

export type MutationUpdateSkillArgs = {
  input?: Maybe<UpdateSkillInput>
}

export type MutationDeleteSkillArgs = {
  input: DeleteSkillInput
}

export type MutationCreateTagArgs = {
  input: CreateTagInput
}

export type MutationUpdateVacancyArgs = {
  input?: Maybe<UpdateVacancyInput>
}

export type MutationPublishVacancyArgs = {
  input?: Maybe<PublishVacancyInput>
}

export type MutationCloseVacancyArgs = {
  input?: Maybe<CloseVacancyInput>
}

export type MutationRotateRequestArgs = {
  input?: Maybe<RotateRequestInput>
}

export type MutationCancelRotateRequestArgs = {
  input?: Maybe<CancelRotateRequestInput>
}

export type MutationUpdateWikiPageArgs = {
  input?: Maybe<UpdateWikiPageInput>
}

export type MutationCreateWikiPageArgs = {
  input?: Maybe<CreateWikiPageInput>
}

export type MutationRemoveWikiPageArgs = {
  input?: Maybe<RemoveWikiPageInput>
}

export type MutationCreateWorkspaceArgs = {
  input?: Maybe<CreateWorkspaceInput>
}

export type MutationUpdateWorkspaceArgs = {
  input?: Maybe<UpdateWorkspaceInput>
}

export type MutationDeleteWorkspaceArgs = {
  id: Scalars['ID']
}

export type MutationCreateWorkplaceArgs = {
  input?: Maybe<CreateWorkplaceInput>
}

export type MutationUpdateWorkplaceArgs = {
  input?: Maybe<UpdateWorkplaceInput>
}

export type MutationDeleteWorkplaceArgs = {
  id: Scalars['ID']
}

export type MutationCreateWorkplaceBookingArgs = {
  input?: Maybe<CreateWorkplaceBookingInput>
}

export type MutationDeleteWorkplaceBookingArgs = {
  id: Scalars['ID']
}

export type MatrixGrade = {
  __typename?: 'MatrixGrade'
  id: Scalars['ID']
  title?: Maybe<Scalars['String']>
  description?: Maybe<Scalars['String']>
}

export type MatrixGroup = {
  __typename?: 'MatrixGroup'
  id: Scalars['ID']
  title?: Maybe<Scalars['String']>
  description?: Maybe<Scalars['String']>
}

export type MatrixSkill = {
  __typename?: 'MatrixSkill'
  id?: Maybe<Scalars['ID']>
  type?: Maybe<Scalars['String']>
  skill?: Maybe<Skill>
  groupId: Scalars['ID']
  gradeId: Scalars['ID']
}

export type MatrixBody = {
  __typename?: 'MatrixBody'
  groups?: Maybe<Array<Maybe<MatrixGroup>>>
  grades?: Maybe<Array<Maybe<MatrixGrade>>>
  skills?: Maybe<Array<Maybe<MatrixSkill>>>
}

export type Matrix = {
  __typename?: 'Matrix'
  id: Scalars['ID']
  title?: Maybe<Scalars['String']>
  description?: Maybe<Scalars['String']>
  body?: Maybe<MatrixBody>
  employees?: Maybe<Array<Employee>>
  access?: Maybe<Access>
  comment?: Maybe<Scalars['String']>
  employeeMatrixId?: Maybe<Scalars['String']>
}

export type MatricesCustomFields = {
  __typename?: 'MatricesCustomFields'
  id: Scalars['ID']
  employeeMail?: Maybe<Scalars['String']>
  lastDiscussed?: Maybe<Scalars['String']>
}

/**
 *    input MatrixSkillInput {
 *   id: ID!
 *   skillId: String!
 *   type: String
 *   groupId: ID!
 *   gradeId: ID!
 * }
 */
export type MatricesInput = {
  id?: Maybe<Scalars['ID']>
}

export type CreateMatrixInput = {
  title: Scalars['String']
  description?: Maybe<Scalars['String']>
}

export type CreateMatrixGradeInput = {
  matrixId: Scalars['ID']
  title: Scalars['String']
  description?: Maybe<Scalars['String']>
}

export type CreateMatrixGroupInput = {
  matrixId: Scalars['ID']
  title: Scalars['String']
  description?: Maybe<Scalars['String']>
}

export type UpdateMatrixInput = {
  id: Scalars['ID']
  title: Scalars['String']
  description?: Maybe<Scalars['String']>
}

export type ReorderMatrixSkillsInput = {
  matrixId: Scalars['ID']
  skillId: Scalars['ID']
  newIndex?: Maybe<Scalars['Int']>
  insertingEmptySlotsIds?: Maybe<Array<Maybe<Scalars['String']>>>
  removingEmptySlotsIds?: Maybe<Array<Maybe<Scalars['String']>>>
}

export type CreateMatrixSkillInput = {
  matrixId: Scalars['ID']
  skillId: Scalars['ID']
  gradeId: Scalars['ID']
  groupId: Scalars['ID']
}

export type AttachMatrixToEmployeeInput = {
  matrix?: Maybe<Scalars['ID']>
  employee?: Maybe<Scalars['ID']>
}

export type DetachMatrixFromEmployeeInput = {
  matrix?: Maybe<Scalars['ID']>
  employee?: Maybe<Scalars['ID']>
}

export type DeleteMatrixSkillInput = {
  matrix?: Maybe<Scalars['ID']>
  id?: Maybe<Scalars['ID']>
}

export type DeleteMatrixGroupInput = {
  matrix?: Maybe<Scalars['ID']>
  id?: Maybe<Scalars['ID']>
}

export type DeleteMatrixGradeInput = {
  matrix?: Maybe<Scalars['ID']>
  id?: Maybe<Scalars['ID']>
}

export type CommentMatrixInput = {
  id: Scalars['ID']
  comment?: Maybe<Scalars['String']>
}

export type MatricesCustomFieldsInput = {
  employee: Scalars['ID']
}

export type UpdateMatricesCustomFieldsInput = {
  employee: Scalars['ID']
  lastDiscussed?: Maybe<Scalars['String']>
}

export type ProposeMatrixChangesInput = {
  matrix: Scalars['ID']
  skill: Scalars['ID']
  proposal: Scalars['String']
}

export type OfficeDay = {
  __typename?: 'OfficeDay'
  id: Scalars['ID']
  date?: Maybe<Scalars['String']>
  employeeLimit?: Maybe<Scalars['Int']>
  location?: Maybe<Location>
  employees?: Maybe<Array<Employee>>
}

export type OfficeDaysInput = {
  dateStart: Scalars['String']
  dateEnd: Scalars['String']
}

export type CreateOfficeBookingInput = {
  dateStart: Scalars['String']
  dateEnd?: Maybe<Scalars['String']>
  location: Location
  skipWeekends?: Maybe<Scalars['Boolean']>
}

export type CancelOfficeBookingInput = {
  dateStart: Scalars['String']
  dateEnd?: Maybe<Scalars['String']>
  location: Location
}

export type UpdateOfficeDaysInput = {
  dateStart: Scalars['String']
  location: Location
  employeeLimit: Scalars['Int']
  dateEnd?: Maybe<Scalars['String']>
}

export type OnboardingTicket = {
  __typename?: 'OnboardingTicket'
  id: Scalars['ID']
  title?: Maybe<Scalars['String']>
  description?: Maybe<Scalars['String']>
  responsible?: Maybe<Array<Employee>>
  isOptional?: Maybe<Scalars['Boolean']>
  isSwissre?: Maybe<Scalars['Boolean']>
  isRequestedByMe?: Maybe<Scalars['Boolean']>
}

export type CreateOnboardingTicketInput = {
  title?: Maybe<Scalars['String']>
  description?: Maybe<Scalars['String']>
  responsible?: Maybe<Scalars['String']>
  isOptional?: Maybe<Scalars['Boolean']>
  isSwissre?: Maybe<Scalars['Boolean']>
}

export type UpdateOnboardingTicketInput = {
  id: Scalars['ID']
  title?: Maybe<Scalars['String']>
  description?: Maybe<Scalars['String']>
  responsible?: Maybe<Scalars['String']>
  isOptional?: Maybe<Scalars['Boolean']>
  isSwissre?: Maybe<Scalars['Boolean']>
}

export type DeleteOnboardingTicketInput = {
  id: Scalars['ID']
}

export type CompleteOnboardingTicketInput = {
  id: Scalars['ID']
}

export type Post = {
  __typename?: 'Post'
  id: Scalars['ID']
  title: Scalars['String']
  slug: Scalars['String']
  body: Scalars['String']
  createdAt?: Maybe<Scalars['String']>
  /** @deprecated Field no longer supported */
  updatedAt?: Maybe<Scalars['String']>
  createdBy?: Maybe<Employee>
  /** @deprecated Field no longer supported */
  isTranslated?: Maybe<Scalars['Boolean']>
  language: Language
  locations?: Maybe<Array<Location>>
  /** @deprecated Field no longer supported */
  images?: Maybe<Array<Maybe<File>>>
  tags?: Maybe<Array<Maybe<Tag>>>
}

export type CreatePostInput = {
  title: Scalars['String']
  body: Scalars['String']
  isTranslated?: Maybe<Scalars['Boolean']>
  language?: Maybe<Language>
  locations?: Maybe<Array<Maybe<Location>>>
  images?: Maybe<Array<Maybe<Scalars['String']>>>
  tags?: Maybe<Array<Maybe<Scalars['String']>>>
}

export type UpdatePostInput = {
  id: Scalars['ID']
  title?: Maybe<Scalars['String']>
  body: Scalars['String']
  isTranslated?: Maybe<Scalars['Boolean']>
  language?: Maybe<Language>
  locations?: Maybe<Array<Maybe<Location>>>
  images?: Maybe<Array<Maybe<Scalars['String']>>>
  tags?: Maybe<Array<Maybe<Scalars['String']>>>
}

export type DeletePostInput = {
  id: Scalars['ID']
}

export type PostEdge = {
  __typename?: 'PostEdge'
  node?: Maybe<Post>
}

export type PageInfo = {
  __typename?: 'PageInfo'
  hasNextPage: Scalars['Boolean']
  hasPreviousPage: Scalars['Boolean']
  startCursor?: Maybe<Scalars['ID']>
  endCursor?: Maybe<Scalars['ID']>
}

export type PostsFilter = {
  tags?: Maybe<Array<Maybe<Scalars['ID']>>>
  isTranslated?: Maybe<Scalars['Boolean']>
  language?: Maybe<Language>
  text?: Maybe<Scalars['String']>
}

export enum Process_Type {
  Rotation = 'ROTATION',
  Onboarding = 'ONBOARDING',
  Offboarding = 'OFFBOARDING',
}

export enum Process_Step_Type {
  Approve = 'APPROVE',
  Notify = 'NOTIFY',
  Independent = 'INDEPENDENT',
}

export type ProcessStep = {
  __typename?: 'ProcessStep'
  id: Scalars['ID']
  title?: Maybe<Scalars['String']>
  description?: Maybe<Scalars['String']>
  type?: Maybe<Process_Step_Type>
  responsibleUsers?: Maybe<Array<Employee>>
  sendToTeamlead?: Maybe<Scalars['Boolean']>
  send24hoursNotification?: Maybe<Scalars['Boolean']>
  isAgileResponsible?: Maybe<Scalars['Boolean']>
  parentSteps?: Maybe<Array<Maybe<ProcessStep>>>
  process?: Maybe<Process>
  hasComment?: Maybe<Scalars['Boolean']>
}

export type Process = {
  __typename?: 'Process'
  id: Scalars['ID']
  title?: Maybe<Scalars['String']>
  customer?: Maybe<Customer>
  nextCustomer?: Maybe<Customer>
  type?: Maybe<Process_Type>
  isRotation?: Maybe<Scalars['Boolean']>
  steps?: Maybe<Array<Maybe<ProcessStep>>>
}

export type CreateProcessInput = {
  title?: Maybe<Scalars['String']>
  customer?: Maybe<Customer>
  nextCustomer?: Maybe<Customer>
  type?: Maybe<Process_Type>
}

export type UpdateProcessInput = {
  id: Scalars['ID']
  customer?: Maybe<Customer>
  type?: Maybe<Process_Type>
  isRotation?: Maybe<Scalars['Boolean']>
}

export type CreateProcessStepInput = {
  parentSteps?: Maybe<Array<Maybe<Scalars['ID']>>>
  process: Scalars['ID']
}

export type UpdateProcessStepInput = {
  id: Scalars['ID']
  title?: Maybe<Scalars['String']>
  description?: Maybe<Scalars['String']>
  type?: Maybe<Process_Step_Type>
  responsibleUsers?: Maybe<Array<Maybe<Scalars['ID']>>>
  sendToTeamlead?: Maybe<Scalars['Boolean']>
  send24hoursNotification?: Maybe<Scalars['Boolean']>
  isAgileResponsible?: Maybe<Scalars['Boolean']>
  parentSteps?: Maybe<Array<Maybe<Scalars['ID']>>>
  hasComment?: Maybe<Scalars['Boolean']>
}

export type ProcessExecutionComment = {
  __typename?: 'ProcessExecutionComment'
  id: Scalars['ID']
  body?: Maybe<Scalars['String']>
  employee?: Maybe<Employee>
  createdAt?: Maybe<Scalars['String']>
  step?: Maybe<ProcessExecutionStep>
}

export type ProcessExecutionStep = {
  __typename?: 'ProcessExecutionStep'
  id: Scalars['ID']
  execution: ProcessExecution
  step?: Maybe<ProcessStep>
  isDone?: Maybe<Scalars['Boolean']>
  description?: Maybe<Scalars['String']>
}

export enum Process_Execution_Status {
  Running = 'RUNNING',
  Finished = 'FINISHED',
  Cancelled = 'CANCELLED',
  Holding = 'HOLDING',
}

export type ProcessExecution = {
  __typename?: 'ProcessExecution'
  id: Scalars['ID']
  process?: Maybe<Process>
  vacancy?: Maybe<Vacancy>
  locations?: Maybe<Array<Location>>
  project?: Maybe<Project>
  projectFrom?: Maybe<Project>
  projectTo?: Maybe<Project>
  status?: Maybe<Scalars['String']>
  executionSteps?: Maybe<Array<Maybe<ProcessExecutionStep>>>
  employee?: Maybe<Scalars['String']>
  employeeRef?: Maybe<Employee>
  employeePhone?: Maybe<Scalars['String']>
  finishDate?: Maybe<Scalars['String']>
  activeStepEmployees?: Maybe<Array<Employee>>
  swissReOffboardingDate?: Maybe<Scalars['String']>
  isIndependentStepsActive?: Maybe<Scalars['Boolean']>
  prio?: Maybe<Scalars['Int']>
}

export type ProcessExecutionsInput = {
  id: Scalars['ID']
}

export type CreateProcessExecutionInput = {
  process: Scalars['ID']
  locations?: Maybe<Array<Maybe<Scalars['ID']>>>
  project?: Maybe<Scalars['ID']>
  projectFrom?: Maybe<Scalars['ID']>
  projectTo?: Maybe<Scalars['ID']>
  prio?: Maybe<Scalars['Int']>
}

export type UpdateProcessExecutionInput = {
  id: Scalars['ID']
  finishDate?: Maybe<Scalars['String']>
  swissReOffboardingDate?: Maybe<Scalars['String']>
  employee?: Maybe<Scalars['String']>
  employeeRef?: Maybe<Scalars['String']>
  employeePhone?: Maybe<Scalars['String']>
  prio?: Maybe<Scalars['Int']>
  locations?: Maybe<Array<Maybe<Scalars['ID']>>>
  project?: Maybe<Scalars['ID']>
  projectFrom?: Maybe<Scalars['ID']>
  projectTo?: Maybe<Scalars['ID']>
}

export type AbortProcessExecutionInput = {
  id: Scalars['ID']
}

export type CompleteProcessExecutionStepInput = {
  execution: Scalars['ID']
  step: Scalars['ID']
}

export type CommentProcessExecutionStepInput = {
  execution: Scalars['ID']
  step: Scalars['ID']
  description: Scalars['String']
}

export type RotateEmployeeInput = {
  execution: Scalars['ID']
  process: Scalars['ID']
  locations?: Maybe<Array<Maybe<Scalars['ID']>>>
  employee: Scalars['ID']
}

export type Project = {
  __typename?: 'Project'
  id: Scalars['ID']
  name: Scalars['String']
  code: Scalars['String']
  description?: Maybe<Scalars['String']>
  leaders?: Maybe<Array<Employee>>
  employees?: Maybe<Array<Employee>>
  skills?: Maybe<Array<Skill>>
  access?: Maybe<Access>
  scrumMasters?: Maybe<Array<Employee>>
  accessEditGlobal?: Maybe<Scalars['Boolean']>
}

export type UpdateProjectSkillsInput = {
  project?: Maybe<Scalars['ID']>
  skills?: Maybe<Array<Maybe<Scalars['ID']>>>
}

export type UpdateProjectInput = {
  id: Scalars['ID']
  scrumMasters?: Maybe<Array<Maybe<Scalars['String']>>>
}

export type Skill = {
  __typename?: 'Skill'
  id: Scalars['ID']
  name: Scalars['String']
  description?: Maybe<Scalars['String']>
  experiences?: Maybe<Array<Experience>>
  projects?: Maybe<Array<Project>>
  parent?: Maybe<Skill>
  children?: Maybe<Array<Skill>>
  addedBy?: Maybe<Employee>
  isMatrixOnly: Scalars['Boolean']
}

export type SkillExperiencesArgs = {
  input?: Maybe<ExperiencesInput>
}

export type SkillsInput = {
  id?: Maybe<Scalars['ID']>
  noMatrixSkills?: Maybe<Scalars['Boolean']>
}

export type CreateSkillInput = {
  name: Scalars['String']
  description?: Maybe<Scalars['String']>
  parent?: Maybe<Scalars['ID']>
  isMatrixOnly?: Maybe<Scalars['Boolean']>
}

export type UpdateSkillInput = {
  id: Scalars['ID']
  name?: Maybe<Scalars['String']>
  description?: Maybe<Scalars['String']>
  parent?: Maybe<Scalars['ID']>
  isMatrixOnly?: Maybe<Scalars['Boolean']>
}

export type DeleteSkillInput = {
  id: Scalars['ID']
}

export type Tag = {
  __typename?: 'Tag'
  id: Scalars['ID']
  name: Scalars['String']
  /** @deprecated Field no longer supported */
  description?: Maybe<Scalars['String']>
  posts?: Maybe<Array<Maybe<Post>>>
}

export type CreateTagInput = {
  name: Scalars['String']
  description?: Maybe<Scalars['String']>
}

export type Vacancy = {
  __typename?: 'Vacancy'
  id: Scalars['ID']
  reason?: Maybe<Scalars['String']>
  locations?: Maybe<Array<Location>>
  position?: Maybe<Scalars['String']>
  responsibilities?: Maybe<Scalars['String']>
  requiredSkills?: Maybe<Scalars['String']>
  additionalSkills?: Maybe<Scalars['String']>
  project?: Maybe<Project>
  isPublished?: Maybe<Scalars['Boolean']>
  isClosed?: Maybe<Scalars['Boolean']>
  customer?: Maybe<Scalars['String']>
  rotateEmployees?: Maybe<Array<Employee>>
  responsibleEmployees?: Maybe<Array<Employee>>
  editable?: Maybe<Scalars['Boolean']>
  employeeExperience?: Maybe<Scalars['String']>
  englishLevel?: Maybe<Scalars['String']>
  stack?: Maybe<Scalars['String']>
  description?: Maybe<Scalars['String']>
}

export type VacanciesInput = {
  id?: Maybe<Scalars['ID']>
}

export type UpdateVacancyInput = {
  id: Scalars['ID']
  reason?: Maybe<Scalars['String']>
  locations?: Maybe<Array<Maybe<Location>>>
  position?: Maybe<Scalars['String']>
  responsibilities?: Maybe<Scalars['String']>
  requiredSkills?: Maybe<Scalars['String']>
  additionalSkills?: Maybe<Scalars['String']>
  project?: Maybe<Scalars['ID']>
  employeeExperience?: Maybe<Scalars['String']>
  englishLevel?: Maybe<Scalars['String']>
  stack?: Maybe<Scalars['String']>
  description?: Maybe<Scalars['String']>
}

export type PublishVacancyInput = {
  id: Scalars['ID']
}

export type CloseVacancyInput = {
  id: Scalars['ID']
}

export type RotateRequestInput = {
  id: Scalars['ID']
  candidate: Scalars['ID']
  comment: Scalars['String']
}

export type CancelRotateRequestInput = {
  id: Scalars['ID']
  candidate: Scalars['ID']
}

export type WikiRootSection = {
  __typename?: 'WikiRootSection'
  id: Scalars['ID']
  title?: Maybe<Scalars['String']>
  description?: Maybe<Scalars['String']>
  icon?: Maybe<Scalars['String']>
  path: Scalars['String']
}

export type WikiPage = {
  __typename?: 'WikiPage'
  id: Scalars['ID']
  title?: Maybe<Scalars['String']>
  body?: Maybe<Scalars['String']>
  path: Scalars['String']
}

export type FoundWikiPage = {
  __typename?: 'FoundWikiPage'
  id: Scalars['ID']
  title?: Maybe<Scalars['String']>
  path: Scalars['String']
  textFragment: Scalars['String']
}

export type WikiPageInput = {
  path?: Maybe<Scalars['String']>
}

export type UpdateWikiPageInput = {
  id: Scalars['ID']
  title?: Maybe<Scalars['String']>
  body?: Maybe<Scalars['String']>
  path?: Maybe<Scalars['String']>
}

export type CreateWikiPageInput = {
  path?: Maybe<Scalars['String']>
}

export type RemoveWikiPageInput = {
  path?: Maybe<Scalars['String']>
}

export type WikiSearchTextInput = {
  path?: Maybe<Scalars['String']>
  text: Scalars['String']
}

export type Workspace = {
  __typename?: 'Workspace'
  id: Scalars['ID']
  drawing?: Maybe<Scalars['String']>
  workplaces?: Maybe<Array<Maybe<Workplace>>>
  location?: Maybe<Location>
  name?: Maybe<Scalars['String']>
}

export type Workplace = {
  __typename?: 'Workplace'
  id: Scalars['ID']
  workspace?: Maybe<Workspace>
  coordX?: Maybe<Scalars['Int']>
  coordY?: Maybe<Scalars['Int']>
  number?: Maybe<Scalars['Int']>
  bookings?: Maybe<Array<Maybe<WorkplaceBooking>>>
}

export type WorkplaceBookingsArgs = {
  input?: Maybe<BookingsInput>
}

export type WorkplaceBooking = {
  __typename?: 'WorkplaceBooking'
  id: Scalars['ID']
  workplace?: Maybe<Workplace>
  employeeId: Scalars['ID']
  startDate?: Maybe<Scalars['String']>
  finishDate?: Maybe<Scalars['String']>
}

export type CreateWorkspaceInput = {
  name: Scalars['String']
  location: Location
}

export type UpdateWorkspaceInput = {
  id: Scalars['ID']
  name?: Maybe<Scalars['String']>
  drawing?: Maybe<Scalars['String']>
}

export type CreateWorkplaceInput = {
  workspace: Scalars['ID']
  coordX: Scalars['Int']
  coordY: Scalars['Int']
}

export type UpdateWorkplaceInput = {
  id: Scalars['ID']
  coordX?: Maybe<Scalars['Int']>
  coordY?: Maybe<Scalars['Int']>
  number?: Maybe<Scalars['Int']>
}

export type BookingsInput = {
  startDate?: Maybe<Scalars['String']>
  finishDate?: Maybe<Scalars['String']>
}

export type CreateWorkplaceBookingInput = {
  workplace: Scalars['ID']
  startDate: Scalars['String']
  finishDate: Scalars['String']
}

export type WorkspacesInput = {
  location?: Maybe<Location>
}

export enum Language {
  Ru = 'RU',
  En = 'EN',
}

export enum Level {
  Wanted = 'WANTED',
  Learning = 'LEARNING',
  Experienced = 'EXPERIENCED',
  Confident = 'CONFIDENT',
}

export enum Location {
  SaintPetersburg = 'SAINT_PETERSBURG',
  Kaliningrad = 'KALININGRAD',
  Tomsk = 'TOMSK',
  Zurich = 'ZURICH',
}

export enum Customer {
  Internal = 'INTERNAL',
  Swissre = 'SWISSRE',
  Allianz = 'ALLIANZ',
}

export enum Access_Group {
  Reviewers = 'REVIEWERS',
  Feedback = 'FEEDBACK',
  HrRu = 'HR_RU',
  HrEditors = 'HR_EDITORS',
  NewsEditors = 'NEWS_EDITORS',
  TechPortal = 'TECH_PORTAL',
  DevPortal = 'DEV_PORTAL',
  WorkspacePlanner = 'WORKSPACE_PLANNER',
  SysAdmins = 'SYS_ADMINS',
  HrAdmins = 'HR_ADMINS',
  SuperUser = 'SUPER_USER',
  WikiEditors = 'WIKI_EDITORS',
}

export enum CacheControlScope {
  Public = 'PUBLIC',
  Private = 'PRIVATE',
}
