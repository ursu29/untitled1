import * as ApolloReactHooks, { gql } from "@apollo/client";
/**
 * DO NOT EDIT THIS FILE
 * This file was automatically generated from GraphQL queries and should not be edited.
 * Please change queries in *.graphql file and run codegen script if necessary.
 */
import * as Types from '../types/graphql'

import * as ApolloReactCommon from '@apollo/react-common'
export type ProposeMatrixChangesMutationVariables = Types.Exact<{
  input: Types.ProposeMatrixChangesInput
}>

export type ProposeMatrixChangesMutation = { __typename?: 'Mutation' } & Pick<
  Types.Mutation,
  'proposeMatrixChanges'
>

export const ProposeMatrixChangesDocument = gql`
  mutation proposeMatrixChanges($input: ProposeMatrixChangesInput!) {
    proposeMatrixChanges(input: $input)
  }
`
export type ProposeMatrixChangesMutationFn = ApolloReactCommon.MutationFunction<
  ProposeMatrixChangesMutation,
  ProposeMatrixChangesMutationVariables
>

/**
 * __useProposeMatrixChangesMutation__
 *
 * To run a mutation, you first call `useProposeMatrixChangesMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useProposeMatrixChangesMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [proposeMatrixChangesMutation, { data, loading, error }] = useProposeMatrixChangesMutation({
 *   variables: {
 *      input: // value for 'input'
 *   },
 * });
 */
export function useProposeMatrixChangesMutation(
  baseOptions?: ApolloReactHooks.MutationHookOptions<
    ProposeMatrixChangesMutation,
    ProposeMatrixChangesMutationVariables
  >,
) {
  return ApolloReactHooks.useMutation<
    ProposeMatrixChangesMutation,
    ProposeMatrixChangesMutationVariables
  >(ProposeMatrixChangesDocument, baseOptions)
}
export type ProposeMatrixChangesMutationHookResult = ReturnType<
  typeof useProposeMatrixChangesMutation
>
export type ProposeMatrixChangesMutationResult = ApolloReactCommon.MutationResult<
  ProposeMatrixChangesMutation
>
export type ProposeMatrixChangesMutationOptions = ApolloReactCommon.BaseMutationOptions<
  ProposeMatrixChangesMutation,
  ProposeMatrixChangesMutationVariables
>
