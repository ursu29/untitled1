# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master
- dev

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '3b1d3f25-aab2-44ff-be8c-2fad33ddb89a'
  imageRepository: 'portal/client'
  containerRegistry: 'sideniscontainerrepository.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)-$(Build.SourceBranchName)-$(Build.SourceVersion)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Test
  displayName: Run tests
  jobs:
    - job: e2e
      displayName: cypress tests
      pool:
          vmImage: $(vmImageName)
          strategy:
            parallel: 4
      steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '12.x'
              displayName: 'Install Node.js'

          # NPM modules and Cypress binary should be cached
          # otherwise the install will be too slow
          # https://docs.microsoft.com/en-us/azure/devops/pipelines/caching/?view=azure-devops
          # since the username / user home directory are not available via system variables
          # (there is even an open question about it)
          # https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops
          # just use "/home/vsts" for now
          - task: CacheBeta@1
            inputs:
              key: npm | $(Agent.OS) | package-lock.json
              path: /home/vsts/.npm
              restoreKeys: npm | $(Agent.OS) | package-lock.json
            displayName: Cache NPM packages
          - task: CacheBeta@1
            inputs:
              key: cypress | $(Agent.OS) | package-lock.json
              path: /home/vsts/.cache/Cypress
              restoreKeys: cypress | $(Agent.OS) | package-lock.json
            displayName: Cache Cypress binary

          # Install Node dependencies
          - script: npm ci
            displayName: 'Install NPM dependencies'

          - script: npm run cy:verify
            displayName: 'Cypress verify'

          - script: npm run cy:info
            displayName: 'Cypress info'

          # The next command starts the server and runs Cypress end-to-end tests against it.
          # The test artifacts (video, screenshots, test output) will be uploaded to Cypress dashboard
          # To record on Cypress dashboard we need to set CYPRESS_RECORD_KEY environment variable
          # environment variable BUILD_BUILDNUMBER is a good candidate
          - script: |
              npx print-env AGENT
              npx print-env BUILD
              npx print-env SYSTEM
              npm run start:ci:windows &
              npx cypress run --record --parallel --ci-build-id $BUILD_BUILDNUMBER --group "Azure CI"
            displayName: 'Run Cypress tests'
            env:
              # avoid warnings about terminal
              TERM: xterm
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)