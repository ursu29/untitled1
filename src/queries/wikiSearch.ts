import * as ApolloReactHooks, { gql } from "@apollo/client";
/**
 * DO NOT EDIT THIS FILE
 * This file was automatically generated from GraphQL queries and should not be edited.
 * Please change queries in *.graphql file and run codegen script if necessary.
 */
import * as Types from '../types/graphql'

import * as ApolloReactCommon from '@apollo/react-common'
export type WikiSearchTextQueryVariables = Types.Exact<{
  input?: Types.Maybe<Types.WikiSearchTextInput>
}>

export type WikiSearchTextQuery = { __typename?: 'Query' } & {
  wikiSearchText?: Types.Maybe<
    Array<
      Types.Maybe<
        { __typename?: 'FoundWikiPage' } & Pick<
          Types.FoundWikiPage,
          'id' | 'title' | 'path' | 'textFragment'
        >
      >
    >
  >
}

export const WikiSearchTextDocument = gql`
  query wikiSearchText($input: WikiSearchTextInput) {
    wikiSearchText(input: $input) {
      id
      title
      path
      textFragment
    }
  }
`

/**
 * __useWikiSearchTextQuery__
 *
 * To run a query within a React component, call `useWikiSearchTextQuery` and pass it any options that fit your needs.
 * When your component renders, `useWikiSearchTextQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useWikiSearchTextQuery({
 *   variables: {
 *      input: // value for 'input'
 *   },
 * });
 */
export function useWikiSearchTextQuery(
  baseOptions?: ApolloReactHooks.QueryHookOptions<
    WikiSearchTextQuery,
    WikiSearchTextQueryVariables
  >,
) {
  return ApolloReactHooks.useQuery<WikiSearchTextQuery, WikiSearchTextQueryVariables>(
    WikiSearchTextDocument,
    baseOptions,
  )
}
export function useWikiSearchTextLazyQuery(
  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<
    WikiSearchTextQuery,
    WikiSearchTextQueryVariables
  >,
) {
  return ApolloReactHooks.useLazyQuery<WikiSearchTextQuery, WikiSearchTextQueryVariables>(
    WikiSearchTextDocument,
    baseOptions,
  )
}
export type WikiSearchTextQueryHookResult = ReturnType<typeof useWikiSearchTextQuery>
export type WikiSearchTextLazyQueryHookResult = ReturnType<typeof useWikiSearchTextLazyQuery>
export type WikiSearchTextQueryResult = ApolloReactCommon.QueryResult<
  WikiSearchTextQuery,
  WikiSearchTextQueryVariables
>
