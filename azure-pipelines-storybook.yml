# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

resources:
  - repo: self

variables:
  imageRepository: 'portal/client-storybook'
  containerRegistry: ACR-syncretis
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)-$(Build.SourceBranchName)-$(Build.SourceVersion)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

name: '$(Build.BuildId)-$(Build.SourceBranchName)-$(Build.SourceVersion)'

stages:
  - stage: Build
    displayName: Build and push stage
    jobs:
      - job: Build
        displayName: Build and push an image to container registry
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build
            inputs:
              command: build
              repository: $(imageRepository)
              dockerfile: '**/Dockerfile.storybook'
              containerRegistry: $(ContainerRegistry)
              arguments: --build-arg REACT_APP_DT_BRANCH_NAME="$(Build.SourceBranchName)"
                --build-arg REACT_APP_DT_REPO_NAME="$(Build.Repository.Name)"
                --build-arg REACT_APP_DT_SOURCE_VERSION="$(Build.SourceVersion)"
                --build-arg REACT_APP_DT_SOURCE_VERSION_MSG="$(Build.SourceVersionMessage)"
              tags: $(tag)
          - task: Docker@2
            displayName: Push
            inputs:
              command: push
              repository: $(imageRepository)
              containerRegistry: $(ContainerRegistry)
              tags: $(tag)